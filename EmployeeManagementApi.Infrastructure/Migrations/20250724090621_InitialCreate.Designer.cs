// <auto-generated />
using System;
using EmployeeManagementApi.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EmployeeManagementApi.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250724090621_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EmployeeManagementApi.Domain.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 7, 24, 9, 6, 20, 390, DateTimeKind.Utc).AddTicks(537),
                            CreatedBy = "System",
                            Description = "Information Technology",
                            Name = "IT",
                            UpdatedAt = new DateTime(2025, 7, 24, 9, 6, 20, 390, DateTimeKind.Utc).AddTicks(541),
                            UpdatedBy = "System"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 7, 24, 9, 6, 20, 390, DateTimeKind.Utc).AddTicks(545),
                            CreatedBy = "System",
                            Description = "Human Resources",
                            Name = "HR",
                            UpdatedAt = new DateTime(2025, 7, 24, 9, 6, 20, 390, DateTimeKind.Utc).AddTicks(547),
                            UpdatedBy = "System"
                        });
                });

            modelBuilder.Entity("EmployeeManagementApi.Domain.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfJoining")
                        .HasColumnType("datetime2");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("RoleId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 7, 24, 9, 6, 20, 390, DateTimeKind.Utc).AddTicks(845),
                            CreatedBy = "System",
                            DateOfJoining = new DateTime(2025, 7, 24, 9, 6, 20, 390, DateTimeKind.Utc).AddTicks(843),
                            DepartmentId = 1,
                            Email = "admin@example.com",
                            IsActive = true,
                            Name = "Admin User",
                            Phone = "+1234567890",
                            RoleId = 1,
                            UpdatedAt = new DateTime(2025, 7, 24, 9, 6, 20, 390, DateTimeKind.Utc).AddTicks(847),
                            UpdatedBy = "System"
                        });
                });

            modelBuilder.Entity("EmployeeManagementApi.Domain.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Permissions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 7, 24, 9, 6, 20, 390, DateTimeKind.Utc).AddTicks(798),
                            CreatedBy = "System",
                            Name = "Admin",
                            Permissions = "{\"CanManageUsers\": true, \"CanViewReports\": true}",
                            UpdatedAt = new DateTime(2025, 7, 24, 9, 6, 20, 390, DateTimeKind.Utc).AddTicks(800),
                            UpdatedBy = "System"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 7, 24, 9, 6, 20, 390, DateTimeKind.Utc).AddTicks(804),
                            CreatedBy = "System",
                            Name = "HR",
                            Permissions = "{\"CanManageUsers\": true, \"CanViewReports\": false}",
                            UpdatedAt = new DateTime(2025, 7, 24, 9, 6, 20, 390, DateTimeKind.Utc).AddTicks(805),
                            UpdatedBy = "System"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 7, 24, 9, 6, 20, 390, DateTimeKind.Utc).AddTicks(808),
                            CreatedBy = "System",
                            Name = "Viewer",
                            Permissions = "{\"CanManageUsers\": false, \"CanViewReports\": true}",
                            UpdatedAt = new DateTime(2025, 7, 24, 9, 6, 20, 390, DateTimeKind.Utc).AddTicks(810),
                            UpdatedBy = "System"
                        });
                });

            modelBuilder.Entity("EmployeeManagementApi.Domain.Employee", b =>
                {
                    b.HasOne("EmployeeManagementApi.Domain.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EmployeeManagementApi.Domain.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Role");
                });
#pragma warning restore 612, 618
        }
    }
}
